color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.7,
group = "Vitis",
popup = ~popup, # Popup on click
highlightOptions = highlightOptions(
color = "white", weight = 2,
bringToFront = TRUE
)
) |>
addPolygons(
data = slfCounties,
fillColor = "#18F5B4",       # Set the fill color to red
fillOpacity = 0,       # Set fill opacity to 30% (transparent red)
color = "#18F5B4",           # Set the outline color to solid red
weight = 3,              # Set the outline thickness (e.g., 3 pixels)
opacity = 1,
group = "SLF",
popup = ~paste(
"<b>",NAME , "</b> <br>",
"<b>EDDMaps Count :</b> ", n
),
# Optional: add a label on hover
highlightOptions = highlightOptions(
weight = 5,
color = "darkred",
fillOpacity = 0.5,
bringToFront = TRUE
)
)|>
addLegend(
pal = palette_colors,
values = ~count,
title = "Vitis Species Present",
position = "bottomright",
group = "Vitis"
) |>
addLegend(
colors =  "#18F5B4",
labels = "Spotted Lanter Fly",
# opacity = my_polygon_fill_opacity, # Use the fill opacity for the legend swatch
title = "Legend", # Optional legend title
position = "bottomleft",
group = "SLF"
)|>
addLayersControl(
overlayGroups = c("SLF", "Vitis"), # These can be toggled on/off (checkboxes)
position = "topleft", # Position of the control box
options = layersControlOptions(collapsed = FALSE) # TRUE collapses it to an icon, FALSE keeps it open
)
m
i
i <- 49
text <- str_remove_all(c2$taxaShort[i], "[\\\\\"]")|>
stringr::str_remove_all( "^c\\(|\\)$")
# convert to vector for lenght '
vect <- stringr::str_split(string = text, pattern = ",") |>
unlist()
vect
v2 <- c(vect)
v2
v2 <- paste0(vect)
v3
v2
text <- str_remove_all(c2$taxaShort[i], "[\\\\\"]")|>
stringr::str_remove_all( "^c\\(|\\)$")
text
# convert to vector for lenght '
vect <- stringr::str_split(string = text, pattern = ",") |>
unlist()
vect
clasS(vect)
class(vect)
c(vect)
for(i in 1:nrow(c2)){
text <- str_remove_all(c2$taxaShort[i], "[\\\\\"]")|>
stringr::str_remove_all( "^c\\(|\\)$")
# convert to vector for lenght '
vect <- stringr::str_split(string = text, pattern = ",") |>
unlist()
v2 <-
if(length(text)>1){
text2 <- vect
}else{
text2 <- text
}
name <- c2$NAME_ALT[i]
if(!is.na(text)){
c2$popup[i] <- paste0(
"<b>", name, "</b> <br>",
paste("Total Vitis Species:", length(vect)),
"<br>" ,
"<ol>",
paste0("<li>", text, "</li>", collapse = ""),
"</ol>"
)
}
}
m <- leaflet(c2) %>%
addTiles() %>% # Add default OpenStreetMap tiles
#state outline
addPolygons(
data = stateSHP,
fillColor = "#FFFFFF", # Symbolize by 'category' using the defined palette
color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.8
) |>
addPolygons(
data = c2,
fillColor = ~palette_colors(count), # Symbolize by 'category' using the defined palette
color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.7,
group = "Vitis",
popup = ~popup, # Popup on click
highlightOptions = highlightOptions(
color = "white", weight = 2,
bringToFront = TRUE
)
) |>
addPolygons(
data = slfCounties,
fillColor = "#18F5B4",       # Set the fill color to red
fillOpacity = 0,       # Set fill opacity to 30% (transparent red)
color = "#18F5B4",           # Set the outline color to solid red
weight = 3,              # Set the outline thickness (e.g., 3 pixels)
opacity = 1,
group = "SLF",
popup = ~paste(
"<b>",NAME , "</b> <br>",
"<b>EDDMaps Count :</b> ", n
),
# Optional: add a label on hover
highlightOptions = highlightOptions(
weight = 5,
color = "darkred",
fillOpacity = 0.5,
bringToFront = TRUE
)
)|>
addLegend(
pal = palette_colors,
values = ~count,
title = "Vitis Species Present",
position = "bottomright",
group = "Vitis"
) |>
addLegend(
colors =  "#18F5B4",
labels = "Spotted Lanter Fly",
# opacity = my_polygon_fill_opacity, # Use the fill opacity for the legend swatch
title = "Legend", # Optional legend title
position = "bottomleft",
group = "SLF"
)|>
addLayersControl(
overlayGroups = c("SLF", "Vitis"), # These can be toggled on/off (checkboxes)
position = "topleft", # Position of the control box
options = layersControlOptions(collapsed = FALSE) # TRUE collapses it to an icon, FALSE keeps it open
)
m
c2$taxaShort[i]
for(i in 1:nrow(c2)){
text <- str_remove_all(c2$taxaShort[i], "[\\\\\"]")|>
stringr::str_remove_all( "^c\\(|\\)$")
# convert to vector for lenght '
vect <- stringr::str_split(string = text, pattern = ",") |>
unlist()
v2 <-
if(length(text)>1){
text2 <- vect
}else{
text2 <- text
}
name <- c2$NAME_ALT[i]
if(!is.na(text)){
c2$popup[i] <- paste0(
"<b>", name, "</b> <br>",
paste("Total Vitis Species:", length(vect)),
"<br>" ,
text
)
}
}
m <- leaflet(c2) %>%
addTiles() %>% # Add default OpenStreetMap tiles
#state outline
addPolygons(
data = stateSHP,
fillColor = "#FFFFFF", # Symbolize by 'category' using the defined palette
color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.8
) |>
addPolygons(
data = c2,
fillColor = ~palette_colors(count), # Symbolize by 'category' using the defined palette
color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.7,
group = "Vitis",
popup = ~popup, # Popup on click
highlightOptions = highlightOptions(
color = "white", weight = 2,
bringToFront = TRUE
)
) |>
addPolygons(
data = slfCounties,
fillColor = "#18F5B4",       # Set the fill color to red
fillOpacity = 0,       # Set fill opacity to 30% (transparent red)
color = "#18F5B4",           # Set the outline color to solid red
weight = 3,              # Set the outline thickness (e.g., 3 pixels)
opacity = 1,
group = "SLF",
popup = ~paste(
"<b>",NAME , "</b> <br>",
"<b>EDDMaps Count :</b> ", n
),
# Optional: add a label on hover
highlightOptions = highlightOptions(
weight = 5,
color = "darkred",
fillOpacity = 0.5,
bringToFront = TRUE
)
)|>
addLegend(
pal = palette_colors,
values = ~count,
title = "Vitis Species Present",
position = "bottomright",
group = "Vitis"
) |>
addLegend(
colors =  "#18F5B4",
labels = "Spotted Lanter Fly",
# opacity = my_polygon_fill_opacity, # Use the fill opacity for the legend swatch
title = "Legend", # Optional legend title
position = "bottomleft",
group = "SLF"
)|>
addLayersControl(
overlayGroups = c("SLF", "Vitis"), # These can be toggled on/off (checkboxes)
position = "topleft", # Position of the control box
options = layersControlOptions(collapsed = FALSE) # TRUE collapses it to an icon, FALSE keeps it open
)
m
View(slfCounties)
# Summary stats for slf ---------------------------------------------------
library(tidyr)
slfCounties
names
names(slfCounties)
head(fips2)
head(slfCounties)
sum1 <- slfCounties |>
separate_wider_position(col = fips2, widths = c(state = 2, county = 5))
str_sub
?str_sub
sum1 <- slfCounties |>
mutate(
stateFIPS = str_sub(fips, 1, 2)
)
sum1
sum1 <- slfCounties |>
mutate(
stateFIPS = str_sub(fips2, 1, 2)
)
sum1
sum1 <- slfCounties |>
mutate(
stateFIPS = str_sub(FIPS, 1, 4)
)
uniqueStates <- stateSHP[stateSHP$code_local %in% sum1$stateFIPS], ]
uniqueStates <- stateSHP[stateSHP$code_local %in% sum1$stateFIPS, ]
uniqueStates
statesSel <- stateSHP[stateSHP$code_local %in% sum1$stateFIPS, ]
uniqueStates <- unique(statesSel$name)
uniqueStates
countySel <- lenght(unique(sum1$FIPS))
countySel <- length(unique(sum1$FIPS))
countySel
countySel <- unique(sum1$FIPS)
head(v2)
head(c2)
# counties with vitis
vitisC <- c2 |>
dplyr::filter(!is.na(count))
vitisC
countyVit <- unique(vitisC$FIPS)
countyVit <- vitisC |>
dplyr::filter(FIPS %in% countySel)
countyVit
dim(countyVit)
dim(vitisC)
c2
# counties with vitis
vitisC <- c2 |>
mutate(
stateFIPS = str_sub(FIPS, 1, 4)
)|>
dplyr::filter(!is.na(count))
length(vitisC$stateFIPS)
length(unique(vitisC$stateFIPS))
length(unique(vitisC$FIPS))
countyVit
dim(countyVit)
# palette for the species counts
palette_colors <- colorNumeric(
palette = brewer.pal(n = 9 , name = "Oranges"), # Add more colors if you have more categories
domain = c2$count, # The column containing the categories
na.color = "#FF000020" # A common gray for NA values, or "transparent" if you want them invisible
)
# update the popup
library(stringr)
c2$taxa2 <- stringr::str_remove_all(string = c2$taxa, pattern = "c\\")
c2$taxa2 <-  stringr::str_remove_all(string = c2$taxa, "^c\\(|\\)$")
c2$taxa2 <-  stringr::str_remove_all(string = c2$taxa,  '"')
# The str_replace_all() function may leave a leading or trailing space
# on some strings. Use str_trim() to remove them.
c2$taxaShort <- stringr::str_replace_all(string = c2$taxa, pattern = "Vitis", replacement = "V.")
c2$popup <- NA
for(i in 1:nrow(c2)){
text <- str_remove_all(c2$taxaShort[i], "[\\\\\"]")|>
stringr::str_remove_all( "^c\\(|\\)$")
# convert to vector for lenght '
vect <- stringr::str_split(string = text, pattern = ",") |>
unlist()
v2 <-
if(length(text)>1){
text2 <- vect
}else{
text2 <- text
}
name <- c2$NAME_ALT[i]
if(!is.na(text)){
c2$popup[i] <- paste0(
"<b>", name, "</b> <br>",
paste("Total Vitis Species:", length(vect)),
"<br>" ,
text
)
}
}
m <- leaflet(c2) %>%
addTiles() %>% # Add default OpenStreetMap tiles
#state outline
addPolygons(
data = stateSHP,
fillColor = "#FFFFFF", # Symbolize by 'category' using the defined palette
color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.8
) |>
addPolygons(
data = c2,
fillColor = ~palette_colors(count), # Symbolize by 'category' using the defined palette
color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.7,
group = "Vitis",
popup = ~popup, # Popup on click
highlightOptions = highlightOptions(
color = "white", weight = 2,
bringToFront = TRUE
)
) |>
addPolygons(
data = slfCounties,
fillColor = "#18F5B4",       # Set the fill color to red
fillOpacity = 0,       # Set fill opacity to 30% (transparent red)
color = "#18F5B4",           # Set the outline color to solid red
weight = 3,              # Set the outline thickness (e.g., 3 pixels)
opacity = 1,
group = "SLF",
popup = ~paste(
"<b>",NAME , "</b> <br>",
"<b>EDDMaps Count :</b> ", n
),
# Optional: add a label on hover
highlightOptions = highlightOptions(
weight = 5,
color = "darkred",
fillOpacity = 0.5,
bringToFront = TRUE
)
)|>
addLegend(
pal = palette_colors,
values = ~count,
title = "Vitis Species Present",
position = "bottomright",
group = "Vitis"
) |>
addLegend(
colors =  "#18F5B4",
labels = "Spotted Lanter Fly",
# opacity = my_polygon_fill_opacity, # Use the fill opacity for the legend swatch
title = "Legend", # Optional legend title
position = "bottomleft",
group = "SLF"
)|>
addLayersControl(
overlayGroups = c("SLF", "Vitis"), # These can be toggled on/off (checkboxes)
position = "topleft", # Position of the control box
options = layersControlOptions(collapsed = FALSE) # TRUE collapses it to an icon, FALSE keeps it open
)
m
# palette for the species counts
palette_colors <- colorNumeric(
palette = brewer.pal(n = 9 , name = "Oranges"), # Add more colors if you have more categories
domain = c2$count, # The column containing the categories
na.color = "#14A1D920" # A common gray for NA values, or "transparent" if you want them invisible
)
c2$popup <- NA
for(i in 1:nrow(c2)){
text <- str_remove_all(c2$taxaShort[i], "[\\\\\"]")|>
stringr::str_remove_all( "^c\\(|\\)$")
# convert to vector for lenght '
vect <- stringr::str_split(string = text, pattern = ",") |>
unlist()
v2 <-
if(length(text)>1){
text2 <- vect
}else{
text2 <- text
}
name <- c2$NAME_ALT[i]
if(!is.na(text)){
c2$popup[i] <- paste0(
"<b>", name, "</b> <br>",
paste("Total Vitis Species:", length(vect)),
"<br>" ,
text
)
}
}
m <- leaflet(c2) %>%
addTiles() %>% # Add default OpenStreetMap tiles
#state outline
addPolygons(
data = stateSHP,
fillColor = "#FFFFFF", # Symbolize by 'category' using the defined palette
color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.8
) |>
addPolygons(
data = c2,
fillColor = ~palette_colors(count), # Symbolize by 'category' using the defined palette
color = "black", # Border color
weight = 1, # Border weight
opacity = 1,
fillOpacity = 0.7,
group = "Vitis",
popup = ~popup, # Popup on click
highlightOptions = highlightOptions(
color = "white", weight = 2,
bringToFront = TRUE
)
) |>
addPolygons(
data = slfCounties,
fillColor = "#18F5B4",       # Set the fill color to red
fillOpacity = 0,       # Set fill opacity to 30% (transparent red)
color = "#18F5B4",           # Set the outline color to solid red
weight = 3,              # Set the outline thickness (e.g., 3 pixels)
opacity = 1,
group = "SLF",
popup = ~paste(
"<b>",NAME , "</b> <br>",
"<b>EDDMaps Count :</b> ", n
),
# Optional: add a label on hover
highlightOptions = highlightOptions(
weight = 5,
color = "darkred",
fillOpacity = 0.5,
bringToFront = TRUE
)
)|>
addLegend(
pal = palette_colors,
values = ~count,
title = "Vitis Species Present",
position = "bottomright",
group = "Vitis"
) |>
addLegend(
colors =  "#18F5B4",
labels = "Spotted Lanter Fly",
# opacity = my_polygon_fill_opacity, # Use the fill opacity for the legend swatch
title = "Legend", # Optional legend title
position = "bottomleft",
group = "SLF"
)|>
addLayersControl(
overlayGroups = c("SLF", "Vitis"), # These can be toggled on/off (checkboxes)
position = "topleft", # Position of the control box
options = layersControlOptions(collapsed = FALSE) # TRUE collapses it to an icon, FALSE keeps it open
)
m
